<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="stylesheet" href="/all.min.css" />
    <link rel="stylesheet" href="/fontawesome.min.css" />
    <link rel="stylesheet" href="style.css" />
    <link rel="stylesheet" href="myStyle.css" />

    <title>CMS</title>
    <style>
      .tooltip {
            position: relative;
            display: inline-block;
            cursor: pointer;
        }
        .tooltip::before {
  content: attr(data-tooltip);
  position: absolute;
  background-color: #333;
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  width: 200px;
  visibility: hidden;
  opacity: 0;
  transition: opacity 0.2s ease, visibility 0.2s ease;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  font-size: small;
  
  
}
.tooltip:hover::before {
  visibility: visible;
  opacity: 1;
}
.step {
  height: 15px;
  width: 15px;
  margin: 0 2px;
  background-color: #bbbbbb;
  border: none;
  border-radius: 50%;
  display: inline-block;
  opacity: 0.5;
}

/* Mark the active step: */
.step.active {
  opacity: 1;
}

/* Mark the steps that are finished and valid: */
.step.finish {
  background-color: #aa0407;
}
input.invalid {
  background-color: #ffdddd;
}
    </style>
  </head>

  <body>
    <div class="container" >
      <div class="navigation" style="background-color: #aa0407;" >
        <ul>
          <li>
            <a href="/home">
              <img src="images/telecellogo.png" style="width: 100px; height: 100px;" alt="">
              <span class="title" style="width: 100px"
                ><h4 style="width: 50px; height: 100px">Logo</h4>
                
                </span
              >
            </a>
          </li>
          <li>
            <a href="/home">
              <span class="icon"
                ><i class="fa fa-home" aria-hidden="true"></i
              ></span>
              <span class="title">Dashboard</span>
            </a>
          </li>
          <li>
            <a href="/user_page">
              <span class="icon"
                ><i class="fa fa-users" aria-hidden="true"></i
              ></span>
              <span class="title User_page">Users</span>
            </a>
          </li>
          <li>
            <a href="/request_page">
              <span class="icon"
                ><i class="fa fa-envelope" aria-hidden="true"></i
              ></span>
              <span class="title">Requests</span>
            </a>
          </li>
          <!-- <li>
            <a href="/newRequest_page">
              <span class="icon"
                ><i class="fa fa-question-circle" aria-hidden="true"></i
              ></span>
              <span class="title">New Requests</span>
            </a>
          </li> -->
          <li>
            <a href="/certificates_page">
              <span class="icon"
                ><i class="fa fa-certificate" aria-hidden="true"></i
              ></span>
              <span class="title">Certificates</span>
            </a>
          </li>
          <li>
            <a href="#">
              <span class="icon"
                ><i class="fa fa-sign-out" aria-hidden="true"></i
              ></span>
              <span class="title logOut">sign out</span>
            </a>
          </li>
        </ul>
      </div>

      <div class="main" >
        <div class="topbar">
          <div class="toggle" onclick="toggleMenu();"></div>
          <!-- <div class="search">
            <label for="">
              <input type="text" placeholder="search here" />
              <i class="fa fa-search" aria-hidden="true"></i>
            </label>
          </div> -->
          <div
            class="user"
            style="
              width: 200px;
              height: 60px;
              display: flex;
              flex-direction: row;
              justify-content: space-around;
              align-items: center;
            "
          >
            <!-- <div style="width: 200px" id="datetime"></div> -->
            <div class="user-image" style="width: 12px; height: 12px">
              <img
                src="/user.png"
                style="
                  width: 50%;
                  height: 50%;
                  object-fit: contain;
                  margin-top: 15px;
                "
              />
            </div>
            <div
              class="user-login-details"
              style="
                display: flex;
                flex-direction: column;
                margin-right: 60px;
                font-size: small;
              "
            >
              <div>
                <span>Name</span>
              </div>
              <div>
                <span>Email</span>
              </div>
            </div>
          </div>
        </div>

        <div class="details">
          <div class="certificates">
            <div
              style="
                display: flex;
                flex-direction: row;
                justify-content: space-between;
              "
            >
              <p style="font-size: x-large; font-weight: 600">
                Certificates Management
              </p>
              <!-- <button
                id="openModalBtn"
                style="
                  background-color: red;
                  padding-left: 16px;
                  padding-right: 16px;
                  padding-top: 8px;
                  padding-bottom: 8px;
                  border: 0px;
                  color: white;
                  border-radius: 2px;
                "
              >
                Add Certificate
              </button> -->
            </div>

            <div
              style="
                display: flex;
                flex-direction: row;
                justify-content: space-between;
              "
            >
              <div
                class="search"
                style="
                  margin-top: 10px;
                  margin-bottom: 10px;
                  margin-right: 10px;
                "
              >
                <label for="">
                  <input type="text" placeholder="search here" />
                  <i class="fa fa-search" aria-hidden="true"></i>
                </label>
              </div>
              <button
                id="openModalBtn"
                style="
                  background-color: red;
                  padding-left: 16px;
                  padding-right: 16px;
                  padding-top: 4px;
                  padding-bottom: 4px;
                  border: 0px;
                  color: white;
                  border-radius: 2px;
                  height: 30px;
                  margin-top: 20px;
                  display: none;
                "
              >
                Add Certificate
              </button>
            </div>
            <div id="table-container">
              <table>
                <thead style="height: 6px">
                <tr
                  style="
                    background-color: rgba(218, 221, 221, 0.757);
                    padding-top: 2px;
                    height: 15px;
                  "
                >
                  <!-- <td style="visibility: hidden;">itemID</td> -->
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Project title
                  </th>
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Domain name
                  </th>
                  <!-- <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Server Hostname
                  </th>
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Server Address
                  </th> -->
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Status
                  </th>
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Date Requested
                  </th>
                  <th
                    style="
                      border: 1px solid #dddddd;
                      text-align: left;
                      padding: 8px;
                    "
                  >
                    Actions
                  </th>
                </tr>
                </thead>
                <tbody> 
              
                </tr>
                </tbody>
              </table>
            </div>
            

            <div id="myModal" class="modal" style="padding-left: 400px; overflow-y: auto;">
              <div
                class="modal-content"
                style="border-radius: 10px; margin-top: 100px; overflow-y: auto;"
              >
                <span
                  class="close"
                  style="
                    border: 1px;
                    border-color: black;
                    width: 10px;
                    height: 10px;
                    margin-right: 80px;
                  "
                  id="closeModalBtn"
                  >&times;</span
                >
                <h2 style="margin-left: 60px">Add New Certificate</h2>
                                <!-- <hr style="margin-top: 5px" /> -->
                <br />
                <form
                  class="userForm"
                  style="margin-left: 60px; padding-bottom: 20px;scroll-behavior: auto;"
                >
                <div style="display: flex; flex-direction: row; justify-content: center;  align-items: center
                    ;">
                      <div class="step" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 30px; border: 1px red solid; background-color: white;"></div>
                      <div class="step" style="width: 30px; height: 30px; border-radius: 50%; background-color: white; border: 1px red solid; "></div>
                    </div>
                  <div id="inputError" name="inputError" class="errorN"></div>
                  <div class="tab" style="display: none;">
                    
                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">UserEmail</label>
                    <input
                      required
                      name="userEmail"
                      
                      class="username"
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                      placeholder="UserEmail"
                      
                    />
                  </div>
                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Project Title</label>
                    <input
                      name="projectTitle"
                      class="username"
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                      placeholder="Project title"
                      required
                    />
                  </div>

                  <div
                  style="
                    display: flex;
                    flex-direction: column;
                    margin-bottom: 10px;
                  "
                >
                  <label for="">Project Purpose</label>
                  <input
                    name="projectPurpose"
                    class="username"
                    style="
                      width: 500px;
                      height: 30px;
                      border: solid 1px black;
                      border-radius: 5px;
                      padding-left: 4px;
                    "
                    placeholder="Project Purporse"
                    required
                  />
                </div>

                <div style="display: flex; flex-direction: row">
                  <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the Service Customer Facing?">
                    <label for="">External Users?</label>
                    <!-- <div style="position: relative; display: inline-block; margin-left: 120px; bottom: 25px;  "> -->
                    
                    <!-- </div> -->
                    <select
                      for=""
                      class="tooltip" data-tooltip="Tooltip 1"
                      name="externalUsers"
                      id="role"
                      style="width: 230px; height: 30px; margin-right: 40px"
                    >
                      <option disabled selected>Select Status</option>
                      <option value="2">Yes</option>
                      <option value="1">No</option>
                    </select>
                  </div>

                  <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the Service revenue generating, e.g does it take top-up payments?">
                    <label for="">Generates Revenue?</label>
                    <select
                      name="revGen"
                      id="team"
                      style="width: 230px; height: 30px"
                    >
                      <option value="" disabled selected>
                        Select option
                      </option>
                      <option value="IT Operations">Yes</option>
                      <option value="IT Architecture">No</option>
                    </select>
                  </div>
                </div>

                <div style="display: flex; flex-direction: row" >
                  <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the degradation of the service likely to have an impact on Vodafone's brand??">
                    <label for="">Deg Effect?</label>
                    <select
                      for=""
                      name="degEffect"
                      id="role"
                      style="width: 230px; height: 30px; margin-right: 40px"
                    >
                      <option disabled selected>Select option</option>
                      <option value="2">Yes</option>
                      <option value="1">No</option>
                    </select>
                  </div>

                  <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is this a Renewal or a New request?">
                    <label for="">Request Type</label>
                    <select
                      name="requestType"
                      id="team"
                      style="width: 230px; height: 30px"
                    >
                      <option value="" disabled selected>
                        Select option
                      </option>
                      <option value="IT Operations">Renewal</option>
                      <option value="IT Architecture">New Request</option>
                    </select>
                  </div>
                </div>

                <div style="display: flex; flex-direction: row">
                  <div style="display: flex; flex-direction: column"  class="tooltip" data-tooltip="Has this request received approval from Team Lead/Line Manager?">
                    <label for="">Manager's Approval?</label>
                    <select
                      for=""
                      name="managerApproval"
                      id="role"
                      style="width: 230px; height: 30px; margin-right: 40px"
                    >
                      <option disabled selected>Select option</option>
                      <option value="2">Yes</option>
                      <option value="1">No</option>
                    </select>
                  </div>

                  <div style="display: flex; flex-direction: column">
                    <label for="">DNS Mapping?</label>
                    <select
                      name="dnsMappingReq"
                      id="team"
                      style="width: 230px; height: 30px"
                    >
                      <option value="" disabled selected>
                        Select option
                      </option>
                      <option value="IT Operations">Yes</option>
                      <option value="IT Architecture">No</option>
                    </select>
                  </div>
                </div>

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Domain name</label>
                    <input
                      name="domainName"
                      class="Email"
                      placeholder="domainName"
                      type="text"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>
                  </div>

                  <div class="tab" style="display: none;">

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Server Hostname</label>
                    <input
                      name="serverHostname"
                      class="password"
                      placeholder="Server Hostname"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Server address</label>
                    <input
                      name="serverAddress"
                      class="password_repeat"
                      placeholder="Server address"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Port Number</label>
                    <input
                      name="portNumber"
                      class="password_repeat"
                      placeholder="Server address"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Server specifications</label>
                    <input
                      name="serverSpecs"
                      class="password_repeat"
                      placeholder="Server address"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>

                  <div
                    style="
                      display: flex;
                      flex-direction: column;
                      margin-bottom: 10px;
                    "
                  >
                    <label for="">Operating System type</label>
                    <input
                      name="operatingSystem"
                      class="lineManager"
                      placeholder="line Manager Email"
                      type="text"
                      required
                      style="
                        width: 500px;
                        height: 30px;
                        border: solid 1px black;
                        border-radius: 5px;
                        padding-left: 4px;
                      "
                    />
                  </div>

                  

                  <div style="display: flex; flex-direction: row">
                    <div style="display: flex; flex-direction: column">
                      <label for="">Status</label>
                      <select
                        for=""
                        name="status"
                        id="role"
                        style="width: 230px; height: 30px; margin-right: 40px"
                      >
                        <option disabled selected>Select Status</option>
                        <option value="2">In Progress</option>
                        <option value="1">Pending</option>
                        <option value="1">Completed</option>
                      </select>
                    </div>

                    <div style="display: flex; flex-direction: column">
                      <label for="">Generates Revenue?</label>
                      <select
                        name="team"
                        id="team"
                        style="width: 230px; height: 30px"
                      >
                        <option value="" disabled selected>
                          Select option
                        </option>
                        <option value="IT Operations">Yes</option>
                        <option value="IT Architecture">No</option>
                      </select>
                    </div>
                  </div>
                  <br />
                  <div style="display: flex; flex-direction: row">
                  <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Will this require a WAF mapping/configuration">
                    <label for="">Waf Config?</label>
                    <select
                      name="wafConfig"
                      id="team"
                      style="width: 230px; height: 30px"
                    >
                      <option value="" disabled selected>
                        Select option
                      </option>
                      <option value="IT Operations">Yes</option>
                      <option value="IT Architecture">No</option>
                    </select>
                  </div>

                  <div style="display: flex; flex-direction: column">
                    <label for="" style="margin-left: 40px;">Date Requested</label>
                    <input type="date" name="dateRequested" style="width: 230px;  margin-left:40px;">
                    
                  </div>
                  </div>

                  </div>

                  <div style="overflow:auto; float: right; display: flex; flex-direction: row; ">
                    <div style="float:right; ">
                      <button type="button" style="
                      padding-left: 8px;
                      padding-right: 8px;
                      background-color: black;
                      border: solid 1px black;
                      color: white;
                      
                     
                      padding-top: 4px;
                      padding-bottom: 4px;
                      border-radius: 3px;
                    " id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                      <button  style="
                      padding-left: 8px;
                      padding-right: 8px;
                      background-color: red;
                      border: solid 1px red;
                      color: white;
                      float: right;
                      
                      padding-top: 4px;
                      padding-bottom: 4px;
                      border-radius: 3px;
                      margin-left: 8px;
                    " id="nextBtn" onclick="nextPrev(1)">Next</button>
                    </div>
                  </div>

                  <button
                    type="submit"
                    id="submit"
                    style="
                      padding-left: 16px;
                      padding-right: 8px;
                      background-color: red;
                      border: solid 1px red;
                      color: white;
                      float: right;
                      margin-right: 80px;
                      padding-top: 4px;
                      padding-bottom: 4px;
                      border-radius: 3px;
                      display: none;
                    "
                  >
                    Submit
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div id="certificateDetailsModal"  style=" display:none; position:fixed; z-index:1; left: 0; top: 0; padding-top: 20px; width: 100%; height: 100%; background-color: black; overflow: auto; background-color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0.4);">
        
        <div
          class="modal-content"
          style="border-radius: 10px; width:50%; height: 90%; margin-top: 30px; overflow-y: auto;"
        >
          <button
            class="close"
            style="
              border: 1px;
              border-color: black;
              width: 10px;
              height: 10px;
              margin-right: 10px;
            "
            id="closeCertModal"
            >&times;</button
          >
          <h2 style="margin-left: 80px">View Certificate Details</h2>
          <div style="display:flex; flex-direction:row; width: 600px; margin-left: 90px;margin-top: 10px;  border: 1px solid red ; background-color: white; border-radius: 15px; text-align: center;">
            <div id="toggleDetailsContainer" style="width: 50%; background-color: red; border-radius: 15px; color: white; ">Certificate Details</div>
            <div id="toggleCommentsContainer" style="width: 50%;">View Comments</div>
        </div>
                          <!-- <hr style="margin-top: 5px" /> -->
          <br />
          <form
            id="CertForm"
            style="margin-left: 20px; padding-bottom: 20px;scroll-behavior: auto;"
          >
          
            <div id="inputError" name="inputError" class="errorN"></div>
            <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px;margin-bottom: 10px;">
            <div
              style="
                display: flex;
                flex-direction: column;
                
              "
            >
              <label for="">Requester's Email</label>
              <div required
              name="userEmail"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              Requester's Email  
                
            </div>
            </div>
            <div
              style="
                display: flex;
                flex-direction: column;
                margin-right: 70px;
              "
            >
              <label for="">Project Title</label>
              <div required
              name="projectTitle"
              
              class="username"
              style="
               color:gray;
               
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
            </div>

            <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px; margin-bottom: 10px;">
            <div
            style="
              display: flex;
              flex-direction: column;
              
            "
          >
            <label for="">Project Purpose</label>
            <div required
              name="projectPurpose"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
          </div>
          <div
              style="
                display: flex;
                flex-direction: column;
                margin-right:50px;
              "
            >
              <label for="">Domain name</label>
              <div required
              name="domainName"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
            </div>

          <div style="display: flex; flex-direction: row; justify-content:space-between; margin: 0px 80px 0px 80px;margin-bottom:10px;">
            <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the Service Customer Facing?">
              <label for="">Public facing?</label>
              <!-- <div style="position: relative; display: inline-block; margin-left: 120px; bottom: 25px;  "> -->
              
              <!-- </div> -->
              <div required
              name="externalUsers"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the Service revenue generating, e.g does it take top-up payments?">
              <label for="">Does it generate Revenue?</label>
              <div required
              name="revGen"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
          </div>

          <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px;margin-bottom: 10px;" >
            <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Is the degradation of the service likely to have an impact on Vodafone's brand??">
              <label for="">Has impact on brand?</label>
              <div required
              name="degEffect"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            
          </div>

          <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px;">
            <div style="display: flex; flex-direction: column"  class="tooltip" data-tooltip="Has this request received approval from Team Lead/Line Manager?">
              <label for="">Manager's Approval?</label>
              <div required
              name="managerApproval"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            <div style="display: flex; flex-direction: column; margin-right: 45px;margin-bottom: 10px;">
              <label for="">DNS Mapping?</label>
              <div required
              name="dnsMappingReq"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
          </div>

            
            <!-- </div> -->

            <!-- <div class="tab" style="display: none;"> -->
              <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px;">
            <div
              style="
                display: flex;
                flex-direction: column;
                margin-bottom: 10px;
              "
            >
              <label for="">Server Hostname</label>
              <div required
              name="serverHostname"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            <div
              style="
                display: flex;
                flex-direction: column;
                margin-bottom: 10px;
                margin-right: 45px;
              "
            >
              <label for="">Server address</label>
              <div required
              name="serverAddress"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
            </div>
            <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px;">
            <div
              style="
                display: flex;
                flex-direction: column;
                margin-bottom: 10px;
              "
            >
              <label for="">Port Number</label>
              <div required
              name="portNumber"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            <div
              style="
                display: flex;
                flex-direction: column;
                margin-bottom: 10px;
              "
            >
              <label for="">Server specifications</label>
              <div required
              name="serverSpecs"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
          </div>

           

            

            <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px; margin-bottom: 10px;">
              <div style="display: flex; flex-direction: column">
                <label for="">Status</label>
                <div required
              name="status"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
              </div>

              <div
              style="
                display: flex;
                flex-direction: column;
                margin-bottom: 10px;
                
               margin-left: 20px;
              "
            >
              <label for="">Operating System type</label>
              <div required
              name="operatingSystem"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>
            </div>
            <!-- <br /> -->
            <div style="display: flex; flex-direction: row; justify-content: space-between; margin: 0px 80px 0px 80px; margin-bottom: 10px;">
            <div style="display: flex; flex-direction: column" class="tooltip" data-tooltip="Will this require a WAF mapping/configuration">
              <label for="">Waf Config?</label>
              <div required
              name="wafConfig"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
            </div>

            <div style="display: flex; flex-direction: column; margin-right: 40px;">
              <label for="" >Date Requested</label>
              <div required
              name="dateRequested"
              
              class="username"
              style="
               color:gray;
              "
              placeholder="UserEmail">
              UserEmail  
                
            </div>
              
            </div>
            </div>

           

            <!-- </div> -->

            
          </form>
          <div id="ViewCommentsContainer" style="display: flex;">
          <div class="ComentsCont" >
           <div style="display: flex; flex-direction: row; justify-content: space-between; margin-left: 70px;">
            <div style="color: red;">Comments <span id="commentLength">(0)</span></div>
            
            <div id="addComment" class="add-comment-btn" style="float: right; margin-right: 40px; margin-top: 10px; background-color: rgb(233, 127, 127); color: white; width: 120px ; padding: 4px 4px 4px 4px; border-radius: 5px; font-size: smaller;">Add Comment</div>
          </div>
          <div style=" margin-left: 70px; margin-top: 10px; width: 600px; border: 1px black solid;"></div>
          </div>
          <div id="commentsContainer" class="comments-container" style="display: flex; flex-direction: column; margin: 10px 80px 10px 80px;">
            <!-- Existing comments will be appended here dynamically -->
            
          </div>
          
          
          
          
          <div id="newcomment" class="new-comment-form" style="display: none; margin-top: 80px; margin-left: 80px;">
            <form action="">
              <div>
                <label for="commentInput">Comment</label>
              </div>
              <div>
                <input type="text" id="commentInput" style="width: 400px; border-radius: 5px; height: 30px; ">
              </div>
            </form>
            <div id="saveComment" class="save-comment-btn" style="float: right; margin-right: 220px; background-color: #aa0407; color: white; margin-top: 10px; border-radius: 5px; padding: 0px 5px 0px 5px;">Save</div>
          </div>
        </div>
        </div>
        
      </div>
      <div id="changeStatusModal" style=" display:none; position:fixed; z-index:1; left: 0; top: 0; padding-top: 200px; width: 100%; height: 100%; background-color: black; overflow: auto; background-color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0.4);">
        <div
        class="modal-content"
        style="border-radius: 10px; margin-top: 100px; width: 40%; overflow-y: auto;"
      >
        <span
          class="close"
          style="
            border: 1px;
            border-color: black;
            width: 10px;
            height: 10px;
            margin-right: 80px;
          "
          id="closeDeleteModal"
          >&times;</span
        >
        <h2 style="margin-left: 60px ; color: black;">Change Certificate Status</h2>
        <!-- <hr style="margin-top: 5px" /> -->
        <span style="padding-left: 60px; margin-top: 60px;">Select your required status from the dropdown below.</span>
        <br />
        <div style="display: flex; flex-direction: column; margin-left: 60px; margin-top: 20px;">
          <label for="">Status</label>
          <select
            for=""
            name="status"
            id="status"
            style="width: 300px; height: 30px; margin-right: 40px"
          >
            <option disabled selected>Select Status</option>
            <option value="In Progress">In Progress</option>
            <option value="Active">Active</option>
            <option value="Expired">Expired</option>
          </select>
        </div>
        <div style="display: flex; flex-direction: row; float: right; justify-content: space-around; margin-top: 30px;">
          <div style="padding-right: 16px;"><button id="cancelDelete" style="background-color: white; border: 1px solid gray;  padding: 4px 8px 4px 8px; border-radius: 4px;">Cancel</button></div>
          <div><button id="saveStatus" style="background-color: green; color: white; border: none; padding: 4px 8px 4px 8px; border-radius: 4px;">Save</button></div>
        </div>
        </div>
      </div>
      <div id="deleteModal" style=" display:none; position:fixed; z-index:1; left: 0; top: 0; padding-top: 200px; width: 100%; height: 100%; background-color: black; overflow: auto; background-color: rgb(0, 0, 0); background-color: rgba(0, 0, 0, 0.4);">
        <div
        class="modal-content"
        style="border-radius: 10px; margin-top: 100px; width: 40%; overflow-y: auto;"
      >
        <span
          class="close"
          style="
            border: 1px;
            border-color: black;
            width: 10px;
            height: 10px;
            margin-right: 80px;
          "
          id="closeDeleteModal"
          >&times;</span
        >
        <h2 style="margin-left: 60px ; color: black;">Delete Certificate</h2>
        <!-- <hr style="margin-top: 5px" /> -->
        <span style="padding-left: 60px; margin-top: 60px;">Are you sure you want to delete this certificate?</span>
        <br />
        <div style="display: flex; flex-direction: row; float: right; justify-content: space-around; margin-top: 30px;">
          <div style="padding-right: 16px;"><button id="cancelDelete" style="background-color: white; border: 1px solid gray;  padding: 4px 8px 4px 8px; border-radius: 4px;">Cancel</button></div>
          <div><button id="confirmDelete" style="background-color: red; color: white; border: none; padding: 4px 8px 4px 8px; border-radius: 4px;">Delete</button></div>
        </div>
        </div>
      </div>
    </div>
    <script src="JS/index.js"></script>
    <script>
      const toggleDetails=document.getElementById("toggleDetailsContainer");
      const toggleCommentContainer=document.getElementById("toggleCommentsContainer");
      const CertForm=document.getElementById("CertForm");
      const openModalBtn = document.getElementById("openModalBtn");
      const closeModalBtn = document.getElementById("closeModalBtn");
      const modal = document.getElementById("myModal");
      const ViewCommentsContainer=document.getElementById("ViewCommentsContainer");

      toggleCommentContainer.addEventListener("click",()=>{
        
        CertForm.style.display="none";
        ViewCommentsContainer.style.display="block";
        toggleCommentContainer.style.color="white";
        toggleDetails.style.color="black";
        toggleDetails.style.backgroundColor="white";
        toggleCommentContainer.style.backgroundColor="red";
        toggleCommentContainer.style.borderRadius="15px";

        const commentsContainer = document.getElementById("commentsContainer");
        commentsContainer.style.display="block";
        let certificateID = 23;

fetch(`comment/getComments/${certificateID}`)
  .then((response) => response.json())
  .then((data) => {
    if (data.data && data.data.length > 0) {
      commentLength.innerText=`(${data.data.length})`;
      // Assuming data.data is an array of comments
      data.data.forEach((comment) => {
        commentsContainer.appendChild(createCommentElement(comment));
      });
    }
  });

      })
      toggleDetails.addEventListener("click",()=>{
        
        CertForm.style.display="block";
        ViewCommentsContainer.style.display="none";
        toggleCommentContainer.style.color="black";
        toggleDetails.style.color="white";
        toggleDetails.style.backgroundColor="red";
        toggleCommentContainer.style.backgroundColor="white";
        toggleDetails.style.borderRadius="15px";
        

      })
      

      openModalBtn.addEventListener("click", () => {
        modal.style.display = "block";
        console.log("opened");
      });

      closeModalBtn.addEventListener("click", () => {
        modal.style.display = "none";
      });

      // Close modal if user clicks outside the modal content
      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          modal.style.display = "none";
        }
      });

      // form submition
      const form = document.querySelector("form");
      const errorMsg = document.querySelector(".errorN");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        errorMsg.textContent = "";
        const userEmail = form.userEmail.value;
        const projectTitle = form.projectTitle.value;
        const projectPurpose = form.projectPurpose.value;
        const revGen = form.revGen.value;
        const externalUsers = form.externalUsers.value;
        const degEffect = form.degEffect.value;
        // const requestType = form.requestType.value;
        const managerApproval = form.managerApproval.value;
        const serverSpecs = form.serverSpecs.value;
        const domainName = form.domainName.value;
        const dnsMappingReq = form.dnsMappingReq.value;
        const wafConfig = form.wafConfig.value;
        const serverHostname = form.serverHostname.value;
        const serverAddress = form.serverAddress.value;
        const operatingSystem = form.operatingSystem.value;
        const portNumber = form.portNumber.value;
        const status = form.status.value;
        const dateRequested = form.dateRequested.value;
        const approversEmail =form.approversEmail.value;
        const ProductType= form.ProductType.value

        // console.log(username, password, password_repeat, email, team, role);

        try {
          const res = await fetch("/certs/addCert", {
            method: "POST",
            body: JSON.stringify({
              userEmail,
        projectTitle,
        projectPurpose,
        revGen,
        externalUsers,
        degEffect,
        // requestType,
        managerApproval,
        serverSpecs,
        domainName,
        dnsMappingReq,
        wafConfig,
        serverHostname,
        serverAddress,
        operatingSystem,
        portNumber,
        status,
        dateRequested,
        approversEmail,
        ProductType
            }),
            headers: { "Content-Type": "application/json" },
          });

          const data = await res.json();
          console.log(data);

          if (data.message == "Success!") {
            modal.style.display="none";
            // location.assign("/certificate_page");
          } else {
            errorMsg.textContent = data.message;
          }
        } catch (error) {
          console.log(error);
        }
      });

      // loading tables

      document.addEventListener("DOMContentLoaded", async function () {
        try {
          const res = await fetch("/certs/myCerts");
          const data = await res.json();
          console.log(data);

          console.log(typeof data);

          if (typeof data === "object") {
            // Data is an array, proceed to populate the table
            const dataArray = Object.values(data);
            loadHTMLTable(dataArray);
          } else {
            // Data is not in the expected format, handle the error or log a message
            console.error("Data is not in the expected format:", data);
          }
        } catch (error) {
          console.log(error);
        }
      });

      function loadHTMLTable(data) {
        console.log("running");
        const table = document.querySelector("table tbody");
        let tableHTML = " ";

        if (data.length === 0) {
          table.innerHTML = "tr><td colspan='5'>No user registered</td></tr>";
        }
        data.forEach(function (certificate) {
          console.log(certificate);

          // console.log(
          //   user[0].username,
          //   user.userEmail,
          //   user.team,
          //   user.lineManager,
          //   user.role
          // );
          for (let i = 0; i < certificate.length; i++) {
            const certificateData = certificate[i];
            console.log(certificateData)
            if (
              certificateData.userEmail !== undefined &&
              certificateData.projectTitle !== undefined &&
              certificateData.domainName !== undefined &&
              // certificateData.requestType !== undefined &&
              certificateData.serverAddress !== undefined &&
              certificateData.status !== undefined &&
              certificateData.dateRequested !== undefined
            ) {
              const dateString = certificateData.dateRequested; // Replace with your actual data
              

   

// Create a Date object from the date string
const date = new Date(dateString);

// Get the date components
const year = date.getFullYear();
const month = (date.getMonth() + 1).toString().padStart(2, "0"); // Month is zero-based, so add 1
const day = date.getDate().toString().padStart(2, "0");

// Format the date as "YYYY-MM-DD"
const formattedDate = `${year}-${month}-${day}`;

console.log(formattedDate);
console.log(certificateData);

tableHTML += `<tr id="opencertDetailsBtn" data-certificate-data="${JSON.stringify(certificateData)}">`;
              tableHTML += `<td style="
                      border-bottom: 1px solid rgb(168, 168, 169);
                      text-align: left;
                      padding: 8px;
                    ">${certificateData.projectTitle}</td>`;
              tableHTML += `<td style="
                      border-bottom: 1px solid rgb(168, 168, 169);
                      text-align: left;
                      padding: 8px;
                    ">${certificateData.domainName}</td>`;
              
              tableHTML += `<td style="
                      border-bottom: 1px solid rgb(168, 168, 169);
                      text-align: left;
                      padding: 8px;
                    ">${certificateData.status}</td>`;
                    
                    tableHTML += `<td style="
                      border-bottom: 1px solid rgb(168, 168, 169);
                      text-align: left;
                      padding: 8px;
                    ">${formattedDate}</td>`;
                    

                    tableHTML += `<td
                  style="
                        position:relative;
                        border-bottom: 1px solid rgb(168, 168, 169);
                        text-align: left;
                        padding: 8px;
                        
                      "
                      data-certificate-id="${certificateData.certificateID}"
                >
                <button
                data-certificate-id="${certificateData.certificateID}"
    class="toggleActionsBtn"
    style="
      padding-left: 4px;
      padding-right: 4px;
      color: white;
      background-color: black;
      border-radius: 3px;
      font-size: small;
      border: none;
    "
    onclick="toggleActions(this)"
  >
    Show Actions
  </button>

  <!-- Actions container -->
  <div data-certificate-id="${certificateData.certificateID}" class="actionsContainer" style="display: none;position: absolute;
  top: 55%; 
  left:5%;
  position:absolute;
  background-color: #ffffff;
  border: 1px solid #ccc;
  border-radius:4px;
  padding: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
  z-index:100;
   margin-top: 10px;">
    <!-- Buttons for different actions -->
    <button
      class="openEditModalBtn"
      style="
        padding-left: 4px;
        padding-right: 4px;
        margin-bottom:4px;
        color: white;
        background-color: black;
        border-radius: 3px;
        margin-left: 6px;
        font-size: small;
        border: none;
      "
    >
      Edit
    </button>
    <button
    data-certificate-data="${certificateData.certificateID}"
      class="deleteModalBtn"
      style="
        padding-left: 4px;
        padding-right: 4px;
        margin-bottom:4px;
        color: white;
        background-color: black;
        border-radius: 3px;
        margin-left: 6px;
        font-size: small;
        border: none;
      "
    >
      Delete
    </button>
    <button
    data-certificate-data="${certificateData.certificateID}"
      class="openChangeStatusModalBtn"
      style="
        padding-left: 4px;
        padding-right: 4px;
        margin-bottom:4px;
        color: white;
        background-color: black;
        border-radius: 3px;
        margin-left: 6px;
        font-size: small;
        border: none;
      "
    >
      Change Status
    </button>
    <button
      data-certificate-data="${certificateData.certificateID}"
      class="openCertDetailsModal"
      style="
        padding-left: 4px;
        padding-right: 4px;
        margin-bottom:4px;
        color: white;
        background-color: black;
        border-radius: 3px;
        margin-left: 6px;
        font-size: small;
        border: none;
      "
    >
      View Cert
    </button>
  </div>
                </td>`;
              tableHTML += "</tr>";
            }
          }
           table.innerHTML = tableHTML;
        
       
        });

        
      }
      
  

      
//       function openCertificateModal(certificateData) {
//     const modal = document.querySelector("#certificateDetailsModal");
//     modal.style.display = "block";
//     // Populate the modal with certificate data
//     modal.querySelector("[name='userEmail']").innerText = certificateData.userEmail;
//     modal.querySelector("[name='projectTitle']").innerText = certificateData.projectTitle;
//     // ... (populate other fields in a similar way)

//     // Display the modal
    
// }

function toggleActions(btn) {
      var actionsContainer = btn.nextElementSibling;
      var toggleActionsBtn = btn;

      if (actionsContainer.style.display === "none") {
        actionsContainer.style.display = "flex";
        actionsContainer.style.flexDirection="column";
        // actionsContainer.style.position="relative";
        toggleActionsBtn.innerText = "Hide Actions";
      } else {
        actionsContainer.style.display = "none";
        toggleActionsBtn.innerText = "Show Actions";
      }
    } 
    let certificateID;       
document.getElementById("table-container").addEventListener("click", function(event) {


  if (event.target.className === "openCertDetailsModal") {
    const certificateDetailsModal=document.getElementById("certificateDetailsModal");
    console.log("kofi");
    certificateDetailsModal.style.display = "block";
    console.log(event.target.getAttribute('data-certificate-data'));
    const certificateDataID= event.target.getAttribute('data-certificate-data');
    console.log(certificateDataID);
    fetch(`certs/certById/${certificateDataID}`)
        .then((response) => response.json())
        .then((data) => {
          console.log(data)
            if (data.data && data.data.length > 0) {
              console.log(data.data[0]);
                const certificateData = data.data[0]; 
                certificateDetailsModal.querySelector("[name='projectTitle']").innerText = certificateData.projectTitle;
                certificateDetailsModal.querySelector("[name='userEmail']").innerText = certificateData.userEmail;
                certificateDetailsModal.querySelector("[name='degEffect']").innerText = certificateData.degEffect;
                certificateDetailsModal.querySelector("[name='domainName']").innerText = certificateData.domainName;
                certificateDetailsModal.querySelector("[name='externalUsers']").innerText = certificateData.externalUsers;
                certificateDetailsModal.querySelector("[name='managerApproval']").innerText = certificateData.managerApproval;
                certificateDetailsModal.querySelector("[name='operatingSystem']").innerText = certificateData.operatingSystem;
                certificateDetailsModal.querySelector("[name='portNumber']").innerText = certificateData.portNumber;
                certificateDetailsModal.querySelector("[name='projectPurpose']").innerText = certificateData.projectPurpose;
                certificateDetailsModal.querySelector("[name='requestType']").innerText = certificateData.requestType;
                certificateDetailsModal.querySelector("[name='revGen']").innerText = certificateData.revGen;
                certificateDetailsModal.querySelector("[name='serverAddress']").innerText = certificateData.serverAddress;
                certificateDetailsModal.querySelector("[name='serverHostname']").innerText = certificateData.serverHostname;
                certificateDetailsModal.querySelector("[name='serverSpecs']").innerText = certificateData.serverSpecs;
                certificateDetailsModal.querySelector("[name='status']").innerText = certificateData.status;
                certificateDetailsModal.querySelector("[name='dnsMappingReq']").innerText = certificateData.dnsMappingReq;
                certificateDetailsModal.querySelector("[name='wafConfig']").innerText = certificateData.wafConfig;
                certificateDetailsModal.querySelector("[name='dateRequested']").innerText = certificateData.dateRequested;
                
            }
          })


    // certificateData.querySelector("[name='userEmail']").innerText = certificateData.userEmail;
    // modal.querySelector("[name='projectTitle']").innerText = certificateData.projectTitle;
    console.log("view button clicked");
  }
  console.log("Event target id:", event.target.id);
  // certificateDetailsModal.style.display = "block";
  if(event.target.className ==="ComentsCont"){
    certificateDetailsModal.style.display="none";
    console.log("Event target id:", event.target.id);
  }

  if(event.target.className==="openChangeStatusModalBtn"){
    const certificateStatusModal=document.getElementById("changeStatusModal");
    console.log("Status Modal clicked");
    certificateStatusModal.style.display = "block";
    console.log(event.target.getAttribute('data-certificate-data'));
    const certificateDataID= event.target.getAttribute('data-certificate-data');
    console.log(certificateDataID);
    const fetchData = async () => {
    try {
      const response = await fetch(`certs/certById/${certificateDataID}`);
      const data = await response.json();

      if (data.data && data.data.length > 0) {
        console.log(data.data[0]);
        const certificateData = data.data[0];
        status.value = certificateData.status;

        const saveStatus = document.getElementById("saveStatus");
        saveStatus.addEventListener("click", async (e) => {
          const selectedStatus = document.getElementById('status').value;

          try {
            const response = await fetch(`/certs/updateCertStatus/${certificateDataID}`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                status: selectedStatus,
              }),
            });

            const responseData = await response.json();

            if (response.ok) {
              console.log('Success:', responseData.message);
              changeStatusModal.style.display="none";
              alert("Certificate status updated sucessfully, refresh page to view changes.");
              location.reload();
            } else {
              console.error('Error:', responseData.message);
            }
          } catch (error) {
            console.error('Error:', error.message);
          }
        });
      }
    } catch (error) {
      console.error('Error:', error.message);
    }
  };

  fetchData(); 

  }
  if(event.target.className==="deleteModalBtn"){
    const certificateDeleteModal=document.getElementById("deleteModal");
    console.log("Delete Modal clicked");
    certificateDeleteModal.style.display = "block";
    console.log(event.target.getAttribute('data-certificate-data'));
    const certificateDataID= event.target.getAttribute('data-certificate-data');
    console.log(certificateDataID);
    deleteModal.style.display = "block";

    document.getElementById("confirmDelete").addEventListener("click", function () {
      fetch("certs/deleteCert/", {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ certificateID: certificateID }),
      })
        .then(response => response.json())
        .then(data => {
          if (data.message === "Deleted!") {
            console.log("deleted");
            // Certificate deleted successfully, you can update the UI or reload the table here
            // For example, you can remove the corresponding row from the table.
            event.target.parentElement.parentElement.remove(); // Remove the whole row
          } else {
            // Handle the error, show an alert, or take appropriate action
          }
        })
        .catch(error => {
          console.error(error);
        });

      document.getElementById("deleteModal").style.display = "none";
    });
  }

});

const closecert=document.getElementById("closeCertModal");
closecert.addEventListener("click",()=>{
  certificateDetailsModal.style.display = "none"; 
})
const toggleComments = document.getElementById("displayComments");
  const addNewComment = document.getElementById("addComment");
  const commentsContainer = document.getElementById("commentsContainer");
  const newCommentForm = document.getElementById("newcomment");
  const commentLength=document.getElementById("commentLength");

  // toggleComments.addEventListener("click", async (e) => {
  //   commentsContainer.style.display = "flex";
  //   let certificateID = 23;

  //   fetch(`comment/getComments/${certificateID}`)
  //     .then((response) => response.json())
  //     .then((data) => {
  //       if (data.data && data.data.length > 0) {
  //         commentLength.innerText=`(${data.data.length})`;
  //         // Assuming data.data is an array of comments
  //         data.data.forEach((comment) => {
  //           commentsContainer.appendChild(createCommentElement(comment));
  //         });
  //       }
  //     });

  //   commentsContainer.style.display = "flex";
  //   addNewComment.style.display="flex";
   
  // });

  addNewComment.addEventListener("click", () => {
    newCommentForm.style.display = "block";
    console.log("add new comment");
  });

  function createCommentElement(commentData) {
    const commentDiv = document.createElement("div");
    commentDiv.className = "comment";
  commentDiv.style.border = "1px solid rgb(235, 169, 169)";
  commentDiv.style.borderRadius = "10px";
  commentDiv.style.margin="10px 0px 10px 0px";

    const headerDiv = document.createElement("div");
    headerDiv.className = "comment-header";
  headerDiv.style.backgroundColor = "rgb(235, 169, 169)";
  headerDiv.style.borderRadius = "10px";
  headerDiv.style.marginBottom="3px";

    const commentorName = document.createElement("div");
    commentorName.textContent = `${commentData.commentor} commented ${getDaysAgo(commentData.date)}`;
  commentorName.style.paddingLeft = "5px";
  commentorName.style.fontSize = "12px";
    headerDiv.appendChild(commentorName);

    const commentText = document.createElement("div");
    commentText.textContent = commentData.comment;
  commentText.style.padding = "5px 10px 10px 10px";
    
    commentDiv.appendChild(headerDiv);
    commentDiv.appendChild(commentText);

    return commentDiv;
  }

  function getDaysAgo(dateString) {
    const currentDate = new Date();
    const commentDate = new Date(dateString);
    const daysAgo = Math.floor((currentDate - commentDate) / (1000 * 60 * 60 * 24));
    return `${daysAgo} days ago`;
  }
 const saveComment=document.getElementById("saveComment");
 saveComment.addEventListener("click",async(e)=>{
  const comment=document.getElementById("commentInput");
  const commentInput=comment.value;
  console.log(commentInput);
  const certificateID=23;
  try {
          const res = await fetch("comment/addComment", {
            method: "POST",
            body: JSON.stringify({
              commentInput,
              certificateID
            
            }),
            headers: { "Content-Type": "application/json" },
          });

          const data = await res.json();
          console.log(data);

          if (data.message == "Success!") {
            modal.style.display="none";
            // location.assign("/certificate_page");
          } else {
            errorMsg.textContent = data.message;
          }
        } catch (error) {
          console.log(error);
          certificateID.getMonth;
          Comm
        }
 })
   
     


    </script>
  </body>
</html>